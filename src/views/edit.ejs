<%- include('partials/header') %>
<nav>
  <div class="nav-left">
      <h1 class="logo">Warrior Gains</h1>
      <ul>
          
          <!--<li><img src="/notification.png" ></li>-->
          <li><i class="far fa-bell"></i></li>
          <!--<li><img src="/inbox.png" ></li>-->
          <li><i class="fas fa-inbox"></i></li>
          <!--<li><img src="/video.png" ></li>-->
          <li><i class="fas fa-video"></i></li>
      </ul>
  </div>
  <div class="nav-right">
      <div class="search-box">
          <i class="fas fa-search"></i>
          <input type="text" placeholder="Search">
      </div>

      <div class="nav-user-icon online">
           <i class="fas 1`fa-users"></i>

      
      <a class="btn btn-dark btn-lg" role="button" href="/" id="logOut"><i class="fas fa-sign-out-alt"></i>Log Out</a>
  </div>
</nav>

<h2>Edit your profile</h2>
<form id = "registerForm" method="post" action="/profile">
    Username:<input type="text" name="userName">
    Name:<input type="text" name="Name">
    Bio:<input type="text" name="Bio">
    link:<input type="text" name="link">
    <button type="Update">Update</button>
</form>

<script type="text/javascript">
    // Policy object
    const strategies = {
      isNoEmpty: function (value, errorMsg) {
        if (value === '') {
          return errorMsg;
        }
      },
      isNoSpace: function (value, errorMsg) {
        if (value.trim() === '') {
          return errorMsg;
        }
      },
      minLength: function (value, length, errorMsg) {
        if (value.trim().length < length) {
          return errorMsg;
        }
      },
      maxLength: function (value, length, errorMsg) {
        if (value.length > length) {
          return errorMsg;
        }
      },
      isMobile: function (value, errorMsg) {
        if (!/^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|17[7]|18[0|1|2|3|5|6|7|8|9])\d{8}$/.test(value)) {
          return errorMsg;
        }                
      }
    }
    // Validation class
    class Validator {
      constructor() {
        this.cache = []
      }
      add(dom, rules) {
        for(let i = 0, rule; rule = rules[i++];) {
          let strategyAry = rule.strategy.split(':')
          let errorMsg = rule.errorMsg
          this.cache.push(() => {
            let strategy = strategyAry.shift()
            strategyAry.unshift(dom.value)
            strategyAry.push(errorMsg)
            return strategies[strategy].apply(dom, strategyAry)
          })
        }
      }
      start() {
        for(let i = 0, validatorFunc; validatorFunc = this.cache[i++];) {
          let errorMsg = validatorFunc()
          if (errorMsg) {
            return errorMsg
          }
        }
      }
    }
    // Call code
    let registerForm = document.getElementById('registerForm')

    let validataFunc = function() {
      let validator = new Validator()
      validator.add(registerForm.userName, [{
        strategy: 'isNoEmpty',
        errorMsg: 'User name cannot be empty'
      }, {
        strategy: 'isNoSpace',
        errorMsg: 'Naming with white space characters is not allowed'
      }, {
        strategy: 'minLength:2',
        errorMsg: 'The length of user name cannot be less than 2 digits'
      }])
      validator.add(registerForm.password, [ {
        strategy: 'minLength:6',
        errorMsg: 'The password length cannot be less than 6 digits'
      }])
      validator.add(registerForm.phoneNumber, [{
        strategy: 'isMobile',
        errorMsg: 'Please input the correct mobile number format'
      }])
      return validator.start()
    }

    registerForm.onsubmit = function() {
      let errorMsg = validataFunc()
      if (errorMsg) {
        alert(errorMsg)
        return false
      }
    }
</script>

<style>
   nav {
                display: flex;
                align-items: center;
                justify-content: space-between;
                background: gainsboro;
                padding: 5px 5%;
                position: sticky;
                top: 0;
                z-index: 100; 
            }

            .nav-left, .nav-right {
                display: flex;
                align-items: center;
                
            }

            .nav-left ul li {
                list-style: none;
                display: inline-block;
            }

            .nav-left ul li i {
                width: 28px;
                margin: 0 15px;
            }

            .nav-user-icon i {
                width: 40px;
                border-radius: 50%;
                cursor: pointer;
            }

            .nav-user-icon {
                margin-left: 30px;
            }

            .search-box {
                background: #F2F3E9;
                width: 350px;
                border-radius: 20px;
                display: flex;
                align-items: center;
                padding: 0 15px;
            }

            .search-box i {
                width: 18px;

            }

            .search-box input {
                width: 100%;
                background: transparent;
                padding: 10px;
                outline: none;
                border: 0;
            }
      
</style>


<%- include('partials/footer') %>