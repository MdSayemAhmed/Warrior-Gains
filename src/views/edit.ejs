<%- include('partials/header') %>
<nav>
  <div class="nav-left">
      <h1 class="logo">Warrior Gains</h1>
      <ul>
          
          <!--<li><img src="/notification.png" ></li>-->
          <li><i class="far fa-bell"></i></li>
          <!--<li><img src="/inbox.png" ></li>-->
          <li><i class="fas fa-inbox"></i></li>
          <!--<li><img src="/video.png" ></li>-->
          <li><i class="fas fa-video"></i></li>
      </ul>
  </div>
  <div class="nav-right">
      <div class="search-box">
          <i class="fas fa-search"></i>
          <input type="text" placeholder="Search">
      </div>

      <div class="nav-user-icon online">
           <i class="fas 1`fa-users"></i>

      
      <a class="btn btn-dark btn-lg" role="button" href="/" id="logOut"><i class="fas fa-sign-out-alt"></i>Log Out</a>
  </div>
</nav>

<h2>Edit your profile</h2>
<form id = "editProfile" method="post" action="/profile">
    Username:<input type="text" name="userName">
    Name:<input type="text" name="Name">
    Bio:<input type="text" name="Bio">
    link:<input type="text" name="link">
    <button type="Update">Update</button>
</form>
 
<script type="text/javascript">
    // implementing the strategy pattern here
    const stratPattern = {
      notEmpty: function (value, errorMsg) {
        if (value === '') {
          return errorMsg;
        }
      },
      noSpace: function (value, errorMsg) {
        if (value.trim() === '') {
          return errorMsg;
        }
      },
      minLength: function (value, length, errorMsg) {
        if (value.trim().length < length) {
          return errorMsg;
        }
      },
      maxLength: function (value, length, errorMsg) {
        if (value.length > length) {
          return errorMsg;
        }
      },
    }
    // a calss to valadate 
    class v {
      constructor() {
        this.cache = []
      }
      add(dom, rules) {
        for(let i = 0, rule; rule = rules[i++];) {
          let stratPatternAry = rule.stratPattern.split(':')
          let errorMsg = rule.errorMsg
          this.cache.push(() => {
            let stratPattern = stratPatternAry.shift()
            stratPatternAry.unshift(dom.value)
            stratPatternAry.push(errorMsg)
            return stratPattern[stratPattern].apply(dom, stratPatternAry)
          })
        }
      }
      start() {
        for(let i = 0, vFunc; vFunc = this.cache[i++];) {
          let errorMsg = vFunc()
          if (errorMsg) {
            return errorMsg
          }
        }
      }
    }
    // Call it implement it.  
    let editProfile = document.getElementById('editProfile')

    let vFunc = function() {
      let v = new V()
      v.add(editProfile.userName, [{
        stratPattern: 'notEmpty',
        errorMsg: 'Username cannot be empty'
      }, {
        stratPattern: 'noSpace',
        errorMsg: 'No white space is allowed'
      }, {
        stratPattern: 'minLength:3',
        errorMsg: 'length of username cannot be less than 2 digits'
      }])
      v.add(editProfile.Name, [ {
        stratPattern: 'notEmpty',
        errorMsg: 'User name cannot be empty'
      }, {
        stratPattern: 'minLength:3',
        errorMsg: 'length of user name cannot be less than 3 digits'
      }])
      v.add(editProfile.Bio, [{
        strategy: 'minLength:3',
        errorMsg: 'length of user name cannot be less than 3 digits'
      }])
      return v.start()
    }

    editProfile.onupdate = function() {
      let errorMsg = vFunc()
      if (errorMsg) {
        alert(errorMsg)
        return false
      }
    }
</script>

<style>
   nav {
                display: flex;
                align-items: center;
                justify-content: space-between;
                background: gainsboro;
                padding: 5px 5%;
                position: sticky;
                top: 0;
                z-index: 100; 
            }

            .nav-left, .nav-right {
                display: flex;
                align-items: center;
                
            }

            .nav-left ul li {
                list-style: none;
                display: inline-block;
            }

            .nav-left ul li i {
                width: 28px;
                margin: 0 15px;
            }

            .nav-user-icon i {
                width: 40px;
                border-radius: 50%;
                cursor: pointer;
            }

            .nav-user-icon {
                margin-left: 30px;
            }

            .search-box {
                background: #F2F3E9;
                width: 350px;
                border-radius: 20px;
                display: flex;
                align-items: center;
                padding: 0 15px;
            }

            .search-box i {
                width: 18px;

            }

            .search-box input {
                width: 100%;
                background: transparent;
                padding: 10px;
                outline: none;
                border: 0;
            }
      
</style>


<%- include('partials/footer') %>